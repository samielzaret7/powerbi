AddTimes =
    let
        WithParsedTime =
            Table.AddColumn(
                ExpandFechas,
                "StartTimeParsed",
                (r) =>
                    let
                        // normalize to text first
                        rawText   = if r[StartTime] = null then null else Text.Trim(Text.From(r[StartTime])),
                        // try: if it's already time/datetime, convert directly
                        tryTime   = try Time.From(r[StartTime]) otherwise null,
                        // try: parse text like "08:30 AM" using en-US (AM/PM)
                        tryText   = if tryTime <> null then tryTime else (try Time.FromText(rawText, "en-US") otherwise null),
                        // fallback: if still null, assume 00:00
                        startTime = if tryText <> null then tryText else #time(0,0,0)
                    in
                        startTime,
                type time
            ),

        // Build InicioLocal / FinLocal using StartTimeParsed and DurationMin
        WithDateTimes =
            Table.TransformColumns(
                Table.AddColumn(
                    WithParsedTime,
                    "InicioLocal",
                    (r) =>
                        #datetime(
                            Date.Year(r[Fechas]),
                            Date.Month(r[Fechas]),
                            Date.Day(r[Fechas]),
                            Time.Hour(r[StartTimeParsed]),
                            Time.Minute(r[StartTimeParsed]),
                            0
                        ),
                    type datetime
                ),
                {} // no transforms here; just keeping structure consistent
            ),

        WithEnd =
            Table.AddColumn(
                WithDateTimes,
                "FinLocal",
                each [InicioLocal] + #duration(0, 0, Number.From([DurationMin]), 0),
                type datetime
            )
    in
        WithEnd
